v 1.07
修复1.06小bug, easyTcpServer文件中：
				int cur = 0;
				while(s->getLastPos()-cur >= sizeof(DataHeader))
        {
            DataHeader *pHeader = (DataHeader*)(s->msgBuf()+cur);
            if(s->getLastPos()-cur >= pHeader->len)
            {
                cur += pHeader->len;
                onMsg(s->socket(), pHeader);
            }
            else
            {                
                break;
            }
        }
        if(cur)   // 这块代码放在这里（本来在while中）
        {
            memcpy(s->msgBuf(), s->msgBuf()+cur, s->getLastPos()-cur);
            s->setLastPos( s->getLastPos()-cur);
        }
        

				while(s->getLastPos() >= sizeof(DataHeader))
        {
            DataHeader *pHeader = (DataHeader*)s->msgBuf();
            if(s->getLastPos() >= pHeader->len)
            {
                int nSize = s->getLastPos() - pHeader->len;
                onMsg(s->socket(), pHeader);
                memcpy(s->msgBuf(), s->msgBuf()+pHeader->len, nSize);
                s->setLastPos( nSize);
            }
            else
            {                
                break;
            }
        }

v 1.03
将指令头和数据包组合起来一起发送，1.02是分开发送的。
注意接收时的处理，先收头部，根据头部判断类型，再接受数据。


v 1.02
客户端输入login, logout, exit ； 服务端显示客户端的指令，用户名 密码
服务端依然只接受一个连接，客户端断开连接后，服务端也退出。


v 1.01
服务端:                          客户端：
    初始化库                        初始化库
    建立socket                      建立socket
    绑定地址                        
    监听              
    等待并接受客户端连接            连接服务端
        发送消息/接受消息           发送消息/接受消息
    关闭socket                      关闭socket
    清理库                          清理库


最简单的一段代码，服务端仅接收一个连接，等待输入并反馈；客户端连接后，用户输入信息发送给服务端，输入exit退出；然后服务端也退出。